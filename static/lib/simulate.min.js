!function(){var toString=Object.prototype.toString,isFunction=function(o){return toString.call(o)==="[object Function]"},isString=function(o){return toString.call(o)==="[object String]"},isBoolean=function(o){return toString.call(o)==="[object Boolean]"},isObject=function(o){return toString.call(o)==="[object Object]"},isNumber=function(o){return toString.call(o)==="[object Number]"},doc=document,mix=function(r,s){for(var p in s)r[p]=s[p]},mouseEvents={click:1,dblclick:1,mouseover:1,mouseout:1,mouseenter:1,mouseleave:1,mousedown:1,mouseup:1,mousemove:1},keyEvents={keydown:1,keyup:1,keypress:1},uiEvents={blur:1,change:1,focus:1,resize:1,scroll:1,select:1},bubbleEvents={scroll:1,resize:1,reset:1,submit:1,change:1,select:1,error:1,abort:1};mix(bubbleEvents,mouseEvents);mix(bubbleEvents,keyEvents);function simulateKeyEvent(target,type,bubbles,cancelable,view,ctrlKey,altKey,shiftKey,metaKey,keyCode,charCode){if(!target){throw"simulateKeyEvent(): Invalid target."}if(isString(type)){type=type.toLowerCase();switch(type){case"textevent":type="keypress";break;case"keyup":case"keydown":case"keypress":break;default:throw"simulateKeyEvent(): Event type '"+type+"' not supported."}}else{throw"simulateKeyEvent(): Event type must be a string."}if(!isBoolean(bubbles)){bubbles=true}if(!isBoolean(cancelable)){cancelable=true}if(!isObject(view)){view=window}if(!isBoolean(ctrlKey)){ctrlKey=false}if(!isBoolean(altKey)){altKey=false}if(!isBoolean(shiftKey)){shiftKey=false}if(!isBoolean(metaKey)){metaKey=false}if(!isNumber(keyCode)){keyCode=0}if(!isNumber(charCode)){charCode=0}var customEvent=null;if(isFunction(doc.createEvent)){try{customEvent=doc.createEvent("KeyEvents");customEvent.initKeyEvent(type,bubbles,cancelable,view,ctrlKey,altKey,shiftKey,metaKey,keyCode,charCode)}catch(ex){try{customEvent=doc.createEvent("Events")}catch(uierror){customEvent=doc.createEvent("UIEvents")}finally{customEvent.initEvent(type,bubbles,cancelable);customEvent.view=view;customEvent.altKey=altKey;customEvent.ctrlKey=ctrlKey;customEvent.shiftKey=shiftKey;customEvent.metaKey=metaKey;customEvent.keyCode=keyCode;customEvent.charCode=charCode}}target.dispatchEvent(customEvent)}else if(isObject(doc.createEventObject)){customEvent=doc.createEventObject();customEvent.bubbles=bubbles;customEvent.cancelable=cancelable;customEvent.view=view;customEvent.ctrlKey=ctrlKey;customEvent.altKey=altKey;customEvent.shiftKey=shiftKey;customEvent.metaKey=metaKey;customEvent.keyCode=charCode>0?charCode:keyCode;target.fireEvent("on"+type,customEvent)}else{throw"simulateKeyEvent(): No event simulation framework present."}}function simulateMouseEvent(target,type,bubbles,cancelable,view,detail,screenX,screenY,clientX,clientY,ctrlKey,altKey,shiftKey,metaKey,button,relatedTarget){if(!target){throw"simulateMouseEvent(): Invalid target."}if(isString(type)){type=type.toLowerCase();if(!mouseEvents[type]){throw"simulateMouseEvent(): Event type '"+type+"' not supported."}}else{throw"simulateMouseEvent(): Event type must be a string."}if(!isBoolean(bubbles)){bubbles=true}if(!isBoolean(cancelable)){cancelable=type!="mousemove"}if(!isObject(view)){view=window}if(!isNumber(detail)){detail=1}if(!isNumber(screenX)){screenX=0}if(!isNumber(screenY)){screenY=0}if(!isNumber(clientX)){clientX=0}if(!isNumber(clientY)){clientY=0}if(!isBoolean(ctrlKey)){ctrlKey=false}if(!isBoolean(altKey)){altKey=false}if(!isBoolean(shiftKey)){shiftKey=false}if(!isBoolean(metaKey)){metaKey=false}if(!isNumber(button)){button=0}relatedTarget=relatedTarget||null;var customEvent=null;if(isFunction(doc.createEvent)){customEvent=doc.createEvent("MouseEvents");if(customEvent.initMouseEvent){customEvent.initMouseEvent(type,bubbles,cancelable,view,detail,screenX,screenY,clientX,clientY,ctrlKey,altKey,shiftKey,metaKey,button,relatedTarget)}else{customEvent=doc.createEvent("UIEvents");customEvent.initEvent(type,bubbles,cancelable);customEvent.view=view;customEvent.detail=detail;customEvent.screenX=screenX;customEvent.screenY=screenY;customEvent.clientX=clientX;customEvent.clientY=clientY;customEvent.ctrlKey=ctrlKey;customEvent.altKey=altKey;customEvent.metaKey=metaKey;customEvent.shiftKey=shiftKey;customEvent.button=button;customEvent.relatedTarget=relatedTarget}if(relatedTarget&&!customEvent.relatedTarget){if(type=="mouseout"){customEvent.toElement=relatedTarget}else if(type=="mouseover"){customEvent.fromElement=relatedTarget}}target.dispatchEvent(customEvent)}else if(isObject(doc.createEventObject)){customEvent=doc.createEventObject();customEvent.bubbles=bubbles;customEvent.cancelable=cancelable;customEvent.view=view;customEvent.detail=detail;customEvent.screenX=screenX;customEvent.screenY=screenY;customEvent.clientX=clientX;customEvent.clientY=clientY;customEvent.ctrlKey=ctrlKey;customEvent.altKey=altKey;customEvent.metaKey=metaKey;customEvent.shiftKey=shiftKey;switch(button){case 0:customEvent.button=1;break;case 1:customEvent.button=4;break;case 2:break;default:customEvent.button=0}customEvent.relatedTarget=relatedTarget;target.fireEvent("on"+type,customEvent)}else{throw"simulateMouseEvent(): No event simulation framework present."}}function simulateUIEvent(target,type,bubbles,cancelable,view,detail){if(!target){throw"simulateUIEvent(): Invalid target."}if(isString(type)){type=type.toLowerCase();if(!uiEvents[type]){throw"simulateUIEvent(): Event type '"+type+"' not supported."}}else{throw"simulateUIEvent(): Event type must be a string."}var customEvent=null;if(!isBoolean(bubbles)){bubbles=type in bubbleEvents}if(!isBoolean(cancelable)){cancelable=type=="submit"}if(!isObject(view)){view=window}if(!isNumber(detail)){detail=1}if(isFunction(doc.createEvent)){customEvent=doc.createEvent("UIEvents");customEvent.initUIEvent(type,bubbles,cancelable,view,detail);target.dispatchEvent(customEvent)}else if(isObject(doc.createEventObject)){customEvent=doc.createEventObject();customEvent.bubbles=bubbles;customEvent.cancelable=cancelable;customEvent.view=view;customEvent.detail=detail;target.fireEvent("on"+type,customEvent)}else{throw"simulateUIEvent(): No event simulation framework present."}}window.simulate=jasmine.simulate=function(target,type,options){if(type=="hashchange"){location.hash=target;return}target=jQuery(target)[0];options=options||{};if(mouseEvents[type]){simulateMouseEvent(target,type,options.bubbles,options.cancelable,options.view,options.detail,options.screenX,options.screenY,options.clientX,options.clientY,options.ctrlKey,options.altKey,options.shiftKey,options.metaKey,options.button,options.relatedTarget)}else if(keyEvents[type]){simulateKeyEvent(target,type,options.bubbles,options.cancelable,options.view,options.ctrlKey,options.altKey,options.shiftKey,options.metaKey,options.keyCode,options.charCode)}else if(uiEvents[type]){simulateUIEvent(target,type,options.bubbles,options.cancelable,options.view,options.detail)}else{throw"simulate(): Event '"+type+"' can't be simulated."}}}();